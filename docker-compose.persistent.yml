# Persistent storage configuration for all services
# This ensures all configs and data are stored in predictable locations

services:
  # PostgreSQL - Full persistence
  postgres:
    volumes:
      - ${DOCKER_DATA_ROOT:-./docker-data}/databases/postgres/data:/var/lib/postgresql/data
      - ./docker/configs/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./docker/configs/postgres/conf.d:/etc/postgresql/conf.d
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
      - ${DOCKER_DATA_ROOT:-./docker-data}/databases/postgres/backup:/backup
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  # Redis - Full persistence
  redis:
    volumes:
      - ${DOCKER_DATA_ROOT:-./docker-data}/cache/redis/data:/data
      - ./docker/configs/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  # RedisInsight - Persistent data
  redis-insight:
    volumes:
      - ${DOCKER_DATA_ROOT:-./docker-data}/tools/redis-insight:/data

  # RabbitMQ - Full persistence
  rabbitmq:
    volumes:
      - ${DOCKER_DATA_ROOT:-./docker-data}/messaging/rabbitmq/data:/var/lib/rabbitmq
      - ${DOCKER_DATA_ROOT:-./docker-data}/messaging/rabbitmq/logs:/var/log/rabbitmq
      - ./docker/configs/rabbitmq:/etc/rabbitmq
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq

  # Grafana - Full persistence
  grafana:
    volumes:
      - ${DOCKER_DATA_ROOT:-./docker-data}/monitoring/grafana/data:/var/lib/grafana
      - ./docker/configs/grafana/provisioning:/etc/grafana/provisioning
      - ${DOCKER_DATA_ROOT:-./docker-data}/monitoring/grafana/plugins:/var/lib/grafana/plugins

  # Prometheus - Full persistence
  prometheus:
    volumes:
      - ${DOCKER_DATA_ROOT:-./docker-data}/monitoring/prometheus/data:/prometheus
      - ./docker/configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./docker/configs/prometheus/rules:/etc/prometheus/rules:ro
      - ./docker/configs/prometheus/targets:/etc/prometheus/targets:ro

  # N8N - Full persistence (disabled temporarily for initialization)
  n8n:
    volumes:
      # Temporarily comment out to let N8N initialize properly
      # - ${DOCKER_DATA_ROOT:-./docker-data}/workflows/n8n/data:/home/node/.n8n
      - ${DOCKER_DATA_ROOT:-./docker-data}/workflows/n8n/files:/files

  # Temporal - Full persistence (disabled temporarily)
  temporal:
    volumes:
      # Temporarily disable all mounts to let Temporal start with defaults
      # - ${DOCKER_DATA_ROOT:-./docker-data}/workflows/temporal/data:/etc/temporal
      # - ./docker/configs/temporal:/etc/temporal/config

  # PHP - Session and log persistence
  php:
    volumes:
      - ./php:/var/www/html
      - ${DOCKER_DATA_ROOT:-./docker-data}/runtime/php/sessions:/var/lib/php/sessions
      - ${DOCKER_DATA_ROOT:-./docker-data}/runtime/php/logs:/var/log/php
      - ${DOCKER_DATA_ROOT:-./docker-data}/apps/kanboard/data:/var/www/html/kanboard/data
      - ${DOCKER_DATA_ROOT:-./docker-data}/apps/kanboard/plugins:/var/www/html/kanboard/plugins
      - ./docker/configs/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ./docker/configs/kanboard/config.php:/var/www/html/kanboard/config.php:ro

  # Nginx - Web servers
  nginx-clickdummy:
    volumes:
      - ./php/click-dummy:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d/clickdummy-root.conf:/etc/nginx/conf.d/default.conf:ro

  nginx-kanboard:
    volumes:
      - ./php/kanboard:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d/kanboard-root.conf:/etc/nginx/conf.d/default.conf:ro

  # Mailpit - Full persistence
  mailpit:
    volumes:
      - ${DOCKER_DATA_ROOT:-./docker-data}/tools/mailpit/data:/data
