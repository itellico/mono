name: Test Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: mono_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpass123
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup test environment
        run: |
          cp apps/api/.env.test apps/api/.env
          echo "DATABASE_URL=postgresql://postgres:testpass123@localhost:5433/mono_test" >> apps/api/.env
          echo "REDIS_URL=redis://localhost:6380" >> apps/api/.env

      - name: Run database migrations
        working-directory: apps/api
        run: |
          pnpm prisma generate
          pnpm prisma migrate deploy

      - name: Seed test data
        working-directory: apps/api
        run: pnpm tsx scripts/seed-test-data.ts

      - name: Run unit tests
        working-directory: apps/api
        run: pnpm test:unit
        continue-on-error: true

      - name: Run integration tests
        working-directory: apps/api
        run: pnpm test:integration

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            apps/api/test-results/
            apps/api/coverage/

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v3
        with:
          directory: ./apps/api/coverage
          flags: api
          name: api-coverage

  security:
    name: Security Tests
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: mono_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpass123
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup test environment
        run: |
          cp apps/api/.env.test apps/api/.env
          echo "DATABASE_URL=postgresql://postgres:testpass123@localhost:5433/mono_test" >> apps/api/.env
          echo "REDIS_URL=redis://localhost:6380" >> apps/api/.env

      - name: Run database migrations
        working-directory: apps/api
        run: |
          pnpm prisma generate
          pnpm prisma migrate deploy

      - name: Seed test data
        working-directory: apps/api
        run: pnpm tsx scripts/seed-test-data.ts

      - name: Run security tests
        working-directory: apps/api
        run: pnpm test:security

      - name: Run dependency audit
        run: pnpm audit --audit-level=high

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: apps/api/security-audit-report.*

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm run lint

      - name: Run type checking
        run: pnpm run type-check

      - name: Check formatting
        run: pnpm run format:check